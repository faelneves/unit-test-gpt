FAIL projects/lodash/zip.test.ts
  zip
    ✓ should return an array of arrays with elements zipped from the given arrays (4 ms)
    ✓ should return an empty array if no arrays are given (4 ms)
    ✕ should return an empty array if any of the given arrays is empty (6 ms)
    ✕ should handle arrays of different lengths by truncating the result to the length of the shortest array (22 ms)
    ✕ should handle arrays with null or undefined values (2 ms)

  ● zip › should return an empty array if any of the given arrays is empty

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 12

    - Array []
    + Array [
    +   Array [
    +     "a",
    +     undefined,
    +     1,
    +   ],
    +   Array [
    +     "b",
    +     undefined,
    +     2,
    +   ],
    + ]

      14 |   it('should return an empty array if any of the given arrays is empty', () => {
      15 |     const result = zip(['a', 'b'], [], [1, 2]);
    > 16 |     expect(result).toEqual([]);
         |                    ^
      17 |   });
      18 |
      19 |   it('should handle arrays of different lengths by truncating the result to the length of the shortest array', () => {

      at Object.toEqual (projects/lodash/zip.test.ts:16:20)

  ● zip › should handle arrays of different lengths by truncating the result to the length of the shortest array

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 5

    @@ -7,6 +7,11 @@
        Array [
          "b",
          2,
          false,
        ],
    +   Array [
    +     "c",
    +     undefined,
    +     undefined,
    +   ],
      ]

      19 |   it('should handle arrays of different lengths by truncating the result to the length of the shortest array', () => {
      20 |     const result = zip(['a', 'b', 'c'], [1, 2], [true, false]);
    > 21 |     expect(result).toEqual([['a', 1, true], ['b', 2, false]]);
         |                    ^
      22 |   });
      23 |
      24 |   it('should handle arrays with null or undefined values', () => {

      at Object.toEqual (projects/lodash/zip.test.ts:21:20)

  ● zip › should handle arrays with null or undefined values

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 5

    @@ -7,6 +7,11 @@
        Array [
          null,
          undefined,
          false,
        ],
    +   Array [
    +     "c",
    +     3,
    +     null,
    +   ],
      ]

      24 |   it('should handle arrays with null or undefined values', () => {
      25 |     const result = zip(['a', null, 'c'], [1, undefined, 3], [true, false, null]);
    > 26 |     expect(result).toEqual([['a', 1, true], [null, undefined, false]]);
         |                    ^
      27 |   });
      28 | });
      29 |

      at Object.toEqual (projects/lodash/zip.test.ts:26:20)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 2 passed, 5 total
Snapshots:   0 total
Time:        3.889 s
Ran all test suites matching /projects\/lodash\/zip.test.ts/i.
