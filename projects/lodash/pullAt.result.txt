FAIL projects/lodash/pullAt.test.ts
  pullAt
    ✕ should remove elements from the array based on the given indexes and return the removed elements (6 ms)
    ✕ should mutate the original array (1 ms)
    ✓ should handle empty array
    ✕ should handle indexes that are out of bounds
    ✕ should handle negative indexes (1 ms)
    ✕ should handle non-numeric indexes (1 ms)

  ● pullAt › should remove elements from the array based on the given indexes and return the removed elements

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 2

      Array [
        "a",
    +   "b",
        "c",
    +   "d",
      ]

       6 |     const pulled = pullAt(array, [1, 3]);
       7 |
    >  8 |     expect(array).toEqual(['a', 'c']);
         |                   ^
       9 |     expect(pulled).toEqual(['b', 'd']);
      10 |   });
      11 |

      at Object.toEqual (projects/lodash/pullAt.test.ts:8:19)

  ● pullAt › should mutate the original array

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 2

      Array [
        "a",
    +   "b",
        "c",
    +   "d",
      ]

      14 |     const pulled = pullAt(array, [1, 3]);
      15 |
    > 16 |     expect(array).toEqual(['a', 'c']);
         |                   ^
      17 |     expect(pulled).toEqual(['b', 'd']);
      18 |   });
      19 |

      at Object.toEqual (projects/lodash/pullAt.test.ts:16:19)

  ● pullAt › should handle indexes that are out of bounds

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

      Array [
        "a",
    +   "b",
        "c",
        "d",
      ]

      30 |     const pulled = pullAt(array, [1, 5]);
      31 |
    > 32 |     expect(array).toEqual(['a', 'c', 'd']);
         |                   ^
      33 |     expect(pulled).toEqual(['b']);
      34 |   });
      35 |

      at Object.toEqual (projects/lodash/pullAt.test.ts:32:19)

  ● pullAt › should handle negative indexes

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 2

      Array [
        "a",
    +   "b",
        "c",
    +   "d",
      ]

      38 |     const pulled = pullAt(array, [1, -2]);
      39 |
    > 40 |     expect(array).toEqual(['a', 'c']);
         |                   ^
      41 |     expect(pulled).toEqual(['b', 'c']);
      42 |   });
      43 |

      at Object.toEqual (projects/lodash/pullAt.test.ts:40:19)

  ● pullAt › should handle non-numeric indexes

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 2

      Array [
    +   "a",
        "b",
    +   "c",
        "d",
      ]

      46 |     const pulled = pullAt(array, ['0', '2']);
      47 |
    > 48 |     expect(array).toEqual(['b', 'd']);
         |                   ^
      49 |     expect(pulled).toEqual(['a', 'c']);
      50 |   });
      51 | });

      at Object.toEqual (projects/lodash/pullAt.test.ts:48:19)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 1 passed, 6 total
Snapshots:   0 total
Time:        0.712 s
Ran all test suites matching /projects\/lodash\/pullAt.test.ts/i.
